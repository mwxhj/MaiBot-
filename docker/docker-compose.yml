version: '3.8'

services:
  # MongoDB 服务
  mongodb:
    image: mongo:5.0
    container_name: maibot-mongodb
    restart: always
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER:-maibot}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-maibotsecret}
    ports:
      - "${MONGO_PORT:-27017}:27017"
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    networks:
      - maibot-network

  # Redis 缓存服务
  redis:
    image: redis:7.0-alpine
    container_name: maibot-redis
    restart: always
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - maibot-network

  # MaiBot 主服务
  maibot:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: maibot-app
    restart: always
    depends_on:
      - mongodb
      - redis
      - napcat
    ports:
      - "${MAIBOT_HTTP_PORT:-8081}:${MAIBOT_HTTP_PORT:-8081}"
      - "${MAIBOT_WS_PORT:-8080}:${MAIBOT_WS_PORT:-8080}"
    environment:
      # 数据库配置
      MONGODB_URI: mongodb://${MONGO_USER:-maibot}:${MONGO_PASSWORD:-maibotsecret}@mongodb:27017/
      REDIS_URI: redis://redis:6379/0
      
      # 服务器配置
      SERVER_HOST: 0.0.0.0
      HTTP_PORT: ${MAIBOT_HTTP_PORT:-8081}
      WS_PORT: ${MAIBOT_WS_PORT:-8080}
      
      # NapCat配置
      NAPCAT_API_BASE: ${NAPCAT_API_BASE:-http://napcat:3000}
      NAPCAT_AUTH_TOKEN: ${NAPCAT_AUTH_TOKEN:-your_secure_token}
      
      # OneBot配置
      ONEBOT_ACCESS_TOKEN: ${ONEBOT_ACCESS_TOKEN:-your_secure_token}
      
      # LLM配置
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      OPENAI_API_BASE: ${OPENAI_API_BASE:-https://api.openai.com/v1}
      
      # 调试模式
      DEBUG: ${DEBUG:-false}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    volumes:
      - ../config:/app/config
      - ../logs:/app/logs
      - ../data:/app/data
    networks:
      - maibot-network
      
  # NapCat服务 - 使用mlikiowa/napcat-docker镜像
  napcat:
    image: mlikiowa/napcat-docker:latest
    container_name: napcat
    restart: always
    environment:
      - NAPCAT_UID=${NAPCAT_UID:-1000}
      - NAPCAT_GID=${NAPCAT_GID:-1000}
      - NAPCAT_AUTH_TOKEN=${NAPCAT_AUTH_TOKEN:-your_secure_token}
      - ONEBOT_ACCESS_TOKEN=${ONEBOT_ACCESS_TOKEN:-your_secure_token}
    ports:
      - "${NAPCAT_PORT:-3000}:3000"
      - "3001:3001"
      - "${NAPCAT_WEBUI_PORT:-6099}:6099"
    volumes:
      - napcat_data:/app/data
      - /app/qq:/app/.config/QQ
      - /app/napcat/config:/app/napcat/config
    networks:
      - maibot-network

volumes:
  mongodb_data:
  redis_data:
  napcat_data:

networks:
  maibot-network:
    driver: bridge 